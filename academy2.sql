/*drop table GroupsLectures;
drop table groupscurators;
drop table Lectures;
drop table Teachers;
drop table Subjects;
drop table curators;
drop table groups;
drop table departments;
drop table faculties;*/

create table faculties
(
    id        integer PRIMARY KEY generated by default as identity,
    name      varchar(100) not null check ( name <> '') unique,
    financing numeric      not null check (financing >= 0) default 0
);

create table departments
(
    id         integer PRIMARY KEY generated by default as identity,
    name       varchar(100) not null check ( name <> '') unique,
    financing  numeric      not null check (financing >= 0) default 0,
    faculty_id integer      not null references faculties
);

create table groups
(
    id            integer PRIMARY KEY generated by default as identity,
    name          varchar(10) not null check ( name <> '') unique,
    year          integer     not null check ( year between 1 and 5),
    department_id integer     not null references departments
);

create table Curators
(
    Id      int     not null generated by default as identity primary key,
    Name    varchar not null check (Name <> ''),
    Surname varchar not null check (Surname <> '')
);

create table Subjects
(
    Id   int          not null generated by default as identity primary key,
    Name varchar(100) not null unique check (Name <> '')
);

create table Teachers
(
    Id      int     not null generated by default as identity primary key,
    Name    varchar not null check (Name <> ''),
    Salary  numeric not null check (Salary > 0.0),
    Surname varchar not null check (Surname <> '')
);

create table Lectures
(
    Id          int     not null generated by default as identity primary key,
    LectureRoom varchar not null check (LectureRoom <> ''),
    SubjectId   int     not null references Subjects,
    TeacherId   int     not null references Teachers
);

create table GroupsCurators
(
    Id        int not null generated by default as identity primary key,
    CuratorId int not null references Curators,
    GroupId   int not null references groups
);

create table GroupsLectures
(
    Id        int not null generated by default as identity primary key,
    GroupId   int not null references groups,
    LectureId int not null references Lectures
);

insert into faculties (name, financing)
values ('Computer Science', 100000.00),
       ('Humanities', 15000);

insert into departments (name, financing, faculty_id)
values ('Programming Systems and DataBases', 25000, 1),
       ('Network Technologies', 25500, 1),
       ('Foreign Languages', 10000, 2),
       ('Psychology', 10000, 2);


insert into groups (name, year, department_id)
values ('PSD51', 5, 1),
       ('NT32', 3, 2),
       ('FL23', 2, 3),
       ('P107', 1, 4);

insert into curators(name, surname)
VALUES ('Curator of', 'PSD51'),
       ('Curator of', 'NT32 and P107');

insert into groupscurators (CuratorId, GroupId)
VALUES (1, 1),
       (2, 2),
       (2, 4);

insert into subjects (name)
values ('DataBase Theory');

insert into subjects (name)
values ('English language'),
       ('Philosophy');

insert into teachers (Name, Salary, Surname)
VALUES ('Samantha', 200, 'Adams');

insert into teachers (Name, Salary, Surname)
VALUES ('Kayla', 250, 'Johns'),
       ('Jenifer', 300, 'Palmer');

insert into lectures (LectureRoom, SubjectId, TeacherId)
VALUES ('B103', 1, 1);

insert into lectures (LectureRoom, SubjectId, TeacherId)
VALUES ('B204', 1, 1);

insert into groupslectures (GroupId, LectureId)
VALUES (2, 2);

insert into departments (name, financing, faculty_id)
VALUES ('Software Development', 20000, 1);

insert into teachers (name, salary, surname)
values ('Dave', 300, 'McQueen'),
       ('Jack', 400, 'Underhill');

insert into lectures (lectureroom, subjectid, teacherid)
VALUES ('D201', 1, 2);

alter table lectures
    add column day_of_week integer
        check (day_of_week between 1 and 7);

update lectures
set day_of_week = 1
where id = 1
   or id = 2;

update lectures
set day_of_week = 4
where id = 3;

alter table lectures
    alter column day_of_week set not null;

insert into subjects (name)
values ('Programming');

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('D201', 2, 3, 4);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('C203', 2, 2, 3);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('C201', 2, 2, 3);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('A207', 1, 1, 1);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('A207', 1, 1, 3);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('A207', 2, 2, 2),
       ('A207', 1, 3, 5);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('A207', 2, 2, 1),
       ('A207', 1, 3, 2);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('A207', 2, 2, 2),
       ('A207', 1, 3, 5);

insert into teachers (name, salary, surname, department_id)
VALUES ('Kayla', 250, 'Johns', 3),
       ('Jenifer', 300, 'Palmer', 4);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('B204', 3, 5, 3),
       ('B204', 4, 6, 4);

insert into lectures (lectureroom, subjectid, teacherid, day_of_week)
values ('B204', 3, 5, 1),
       ('B204', 4, 6, 1);

alter table teachers
    add column department_id integer not null default 1;

update teachers
set department_id = 5
where id = 2
   or id = 3;

alter table teachers
    alter column department_id drop default;
alter table teachers
    add foreign key (department_id) references departments;

/*select count(*) from teachers, departments
where department_id = departments.id and departments.name = 'Software Development';

select count(*) from lectures, teachers
where lectures.teacherid = teachers.id
  and teachers.name = 'Dave'
  and teachers.surname = 'McQueen';

select departments.name as departmen, count(*) as count_of_teachers from teachers, departments
where department_id = departments.id
group by departments.name;

select count(*) from lectures where lectureroom = 'D201';

select lectures.lectureroom as room, count(*) as count
from lectures
group by lectures.lectureroom;

select avg(teachers.salary)
from teachers, departments, faculties
where teachers.department_id = departments.id
  and faculties.id = departments.faculty_id
  and faculties.name = 'Computer Science';

select middle.group_name, middle.curators_count
from
    (select groups.name as group_name, count(*) as curators_count
     from groups, groupscurators, curators
     where groups.id = groupscurators.groupid
       and curators.id = groupscurators.curatorid
     group by groups.name) as middle

where middle.curators_count > 1;

select middle.curators_name, middle.groups_count
from
    (select curators.surname as curators_name, count(*) as groups_count
     from groups, groupscurators, curators
     where groups.id = groupscurators.groupid
       and curators.id = groupscurators.curatorid
     group by curators.surname) as middle
where middle.groups_count >= 1;

/*9*/
select t.name || ' ' || t.surname as full_name, count(s.id)
from teachers as t, lectures as l, subjects as s
where t.id = l.teacherid
  and l.subjectid = s.id
group by t.name, t.surname;

/*10*/
select Lectures.day_of_week as day, count(Lectures)
from lectures
group by Lectures.day_of_week
order by Lectures.day_of_week;

/*11*/
select l.lectureroom as Auditoria, count(distinct d.name)
from lectures as l, teachers as t, departments as d, subjects as s
where l.teacherid = t.id
  and t.department_id = d.id
  and s.id = l.subjectid
group by l.lectureroom
order by l.lectureroom;

/*12*/
select f.name, count(s.id)
from subjects as s, lectures as l, teachers as t, departments as d, faculties as f
where s.id = l.subjectid
  and l.teacherid = t.id
  and t.department_id = d.id
  and d.faculty_id = f.id
group by f.name;

/*13*/
select t.Name || ' ' || t.surname as преподаватель, l.LectureRoom as аудитория, count(s.id)
from subjects as s, lectures as l, teachers as t
where s.id = l.subjectid
  and l.teacherid = t.id
group by t.Name, t.surname, l.LectureRoom
order by l.LectureRoom;*/

create table students
(
    id      integer generated by default as identity primary key,
    name    varchar not null check (name != ''),
    surname varchar not null check (surname != ''),
    rating  integer not null check (rating between 0 and 5)
);

create table groups_students
(
    id         integer generated by default as identity primary key,
    group_id   integer not null references groups (id),
    student_id integer not null references students (id)
);

alter table teachers
    add column is_professor smallint not null check (is_professor between 0 and 1) default 0;

alter table lectures
    add column date date check (date < now());

update lectures
set date = now();

alter table lectures
    alter column date set not null;

alter table departments
    add column building int check (building between 1 and 5);

update departments
set building = 1
where id in (1, 2);

update departments
set building = 2
where id in (3, 4);

update departments
set building = 3
where id = 5;

alter table departments
    alter column building set not null;

select building
from (select building, sum(financing)
      from departments
      group by building) as financing_by_building
where financing_by_building.sum > 30000;



create table heads
(
    id         integer generated by default as identity primary key,
    teacher_id integer not null references teachers
);

create table assistants
(
    id         integer generated by default as identity primary key,
    teacher_id integer not null references teachers
);

create table deans
(
    id         integer generated by default as identity primary key,
    teacher_id integer not null references teachers
);

create table lecture_rooms
(
    id       integer generated by default as identity primary key,
    building integer     not null check (building between 1 and 5),
    name     varchar(10) not null check (name != '') unique
);

create table schedules
(
    id              integer generated by default as identity primary key,
    class           integer not null check (class between 1 and 8),
    day_of_week     integer not null check (day_of_week between 1 and 7),
    week            integer not null check (week between 1 and 52),
    lecture_id      integer not null references lectures,
    lecture_room_id integer not null references lecture_rooms
);

alter table faculties
    add column building integer check (building between 1 and 5);

update faculties
set building = 1
where id = 1;

update faculties
set building = 2
where id = 2;

alter table faculties
    alter column building set not null;

insert into deans (teacher_id)
values (1),
       (2);

alter table faculties
    add column dean_id integer references deans;

update faculties
set dean_id = 1
where id = 1;

update faculties
set dean_id = 2
where id = 2;

alter table faculties
    alter column dean_id set not null;
alter table departments
    add column head_id integer references heads;

insert into heads (teacher_id)
values (1),
       (2),
       (3);

update departments
set head_id = 1
where id in (1, 2, 3, 4, 5);

alter table departments
    alter column head_id set not null;

insert into assistants (teacher_id)
values (1),
       (2);

alter table assistants
    add column name varchar check (name != '');
alter table assistants
    add column surname varchar check (surname != '');

update assistants
set name = 'Joe'
where id = 1;
update assistants
set name = 'Jack'
where id = 2;

update assistants
set surname = 'Black'
where id = 1;
update assistants
set surname = 'White'
where id = 2;

alter table assistants
    alter column name set not null;
alter table assistants
    alter column surname set not null;

alter table curators
    add column teacher_id integer references teachers;

update curators
set teacher_id = 1
where id = 1;
update curators
set teacher_id = 2
where id = 2;

alter table teachers
    drop column department_id;
alter table Lectures
    drop column lectureroom;
alter table Lectures
    drop column date;
alter table Lectures
    drop column day_of_week;

insert into curators(name, surname)
VALUES ('Curator of', 'FL23'),
       ('Curator of', 'P107');

insert into groupscurators (CuratorId, GroupId)
VALUES (3, 3),
       (4, 4);

update curators
set teacher_id = 3
where id = 3;
update curators
set teacher_id = 5
where id = 4;

insert into groupscurators (CuratorId, GroupId)
VALUES (3, 3),
       (4, 4);

insert into lecture_rooms (building, name)
values (4, 'A311'),
       (4, 'A104'),
       (3, 'A105'),
       (4, 'A110');

insert into schedules (class, day_of_week, week, lecture_id, lecture_room_id)
values (2, 1, 12, 3, 1),
       (1, 3, 11, 1, 2),
       (4, 5, 11, 5, 3),
       (3, 6, 15, 8, 4);

insert into schedules (class, day_of_week, week, lecture_id, lecture_room_id)
values (3, 2, 24, 7, 2),
       (4, 4, 4, 4, 4),
       (1, 1, 11, 3, 1),
       (3, 6, 15, 8, 4);

/*6*/
select t.Name, t.Surname
from teachers t
         left join curators c on c.teacher_id = t.id
         left join GroupsCurators gc on c.id = gc.CuratorId
         left join groups g on gc.GroupId = g.id
         left join departments d on d.id = g.department_id
         left join faculties f on f.id = d.faculty_id
where f.id = 1
  and d.id != 5;

/*7*/
select f.building
from faculties f
UNION ALL select d.building
from departments d
union all select lr.building
from lecture_rooms lr;

/*9*/
select distinct schedules.day_of_week
from schedules
         join lecture_rooms lr on schedules.lecture_room_id = lr.id
where (lr.name = 'A311' or lr.name = 'A104')
  and lr.building = 4;



